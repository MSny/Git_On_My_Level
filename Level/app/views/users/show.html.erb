 <head>
  <script src="http://d3js.org/d3.v3.min.js"  charset="utf-8"></script>
  <script src="http://code.jquery.com/jquery-2.0.0.min.js"></script>
  <script src="http://underscorejs.org/underscore-min.js"></script>
  <script src="http://backbonejs.org/backbone-min.js"></script>

</head>


<% if notice %>
<p id="notice"><%= notice %></p>
<% end %>
<div id="user-area">
</div>

<div id="content-area">
</div>

<!-- individual User -->
<script type="text/template" id="userTemp">
  <div class="container">
  <div class="user_main">
  <small class="user_info">
  {{ if(user.email) { }}
    {{= user.email }} 
  {{ } else { }}
    <a class="editing_user"> add email </a>
   {{ } }}

  | login count: {{= user.logins }} </small>
  <p>You have been a member with us since: {{= DateHelper.time_ago_in_words_with_parsing(user.created_at) }} last login: {{= DateHelper.time_ago_in_words_with_parsing(user.updated_at) }}</p>
  </div>
  <div class="rescue_info">
  {{ if(!user.next_level) { }}
    <p class="error_explanation"> You haven't set up your RescueTime API Key yet. You'll need that to track your experience points and level up into a High-Wizard of the Keyboard! <a href="https://www.rescuetime.com/anapi/manage">Rescue Time</a> </p>
  {{ } else { }}
    <div class="top_level">
    Level {{= user.next_level-1}} {{- user.name }} ({{- user.exp}}/{{- user.next_requires}})
      <div class="experience">
        <span class="main_experience">
        You must gain: {{= user.exp_left}} experience left before {{= user.next_level}}
        </span>
      </div>
    </div>
  {{ } }}
  </div>
  </div>
  <% if current_user == @user %>
  <button class="pure-button editing_user">
  {{ if(!user.email) { }}
   Add my Email
  {{ }else { }} 
    Update My Info! 
  {{ } }}
  </button>
  <div class="edit_form" style="display: none">
  <form class="pure-form pure-form-aligned" id="user-account">
    <fieldset>
    <div class="pure-control-group">
    <label for="email"> Email
    <input type="text" id="email" value="{{= user.email }}">
    </label>
    </div>
    <div class="pure-control-group">
    <label for="API"> Rescue-Time API
    <input type="text" id="rescue-key">
    </label>
    </div>
    <div class="pure-controls">
    <button class="pure-button update_user"> Update!
    </button>
    </div>
    </fieldset>
  </form>
  </div>
  <% end %>
</script>

/*Bar chart*/

<div class="widget">
<h1>My Skills</h1>
<div id="chart"></div>  
</div>
/*<!-- D3 bar chart example -->*/
<script>
var data = [
  ["Javascript",2312],
  ["Ruby",674], 
  ["Go", 994], 
  ["Ios", 3433], 
  ["Python", 127],
  ["HTML/CSS",2261]
];


var chart = document.getElementById("chart"),
    axisMargin = 20,
    margin = 20,
    valueMargin = 4,
    width = chart.offsetWidth,
    height = chart.offsetHeight,
    barHeight = (height-axisMargin-margin*2)* 0.4/data.length,
    barPadding = (height-axisMargin-margin*2)*0.6/data.length,
    data, bar, svg, scale, xAxis, labelWidth = 0;

max = d3.max(data.map(function(i){ 
  return i[1];
}));

svg = d3.select(chart)
  .append("svg")
  .attr("width", width)
  .attr("height", 400);


bar = svg.selectAll("g")
  .data(data)
  .enter()
  .append("g");

bar.attr("class", "bar")
  .attr("cx",0)
  .attr("transform", function(d, i) { 
     return "translate(" + margin + "," + (i * (barHeight + barPadding) + barPadding) + ")";
  });

bar.append("text")
  .attr("class", "label")
  .attr("y", barHeight / 2)
  .attr("dy", ".35em") //vertical align middle
  .text(function(d){
    return d[0];
  }).each(function() {
    labelWidth = Math.ceil(Math.max(labelWidth, this.getBBox().width));
  });

scale = d3.scale.linear()
  .domain([0, max])
  .range([0, width - margin*2 - labelWidth]);

bar.append("rect")
  .attr("transform", "translate("+labelWidth+", 0)")
  .attr("height", barHeight)
  .attr("width", function(d){
    return scale(d[1]);
  });

bar.append("text")
  .attr("class", "value")
  .attr("y", barHeight / 2)
  .attr("dx", -valueMargin + labelWidth) //margin right
  .attr("dy", ".35em") //vertical align middle
  .attr("text-anchor", "end")
  .text(function(d){
    return d[1];
  })
 .attr("x", function(d){
    var width = this.getBBox().width;
    return Math.max(width + valueMargin, scale(d[1]));
  });

svg.insert("g",":first-child")
 .attr("class", "axis")
 .attr("transform", "translate(" + (margin + labelWidth) + ","+ (height - axisMargin - margin)+")")
 .call(xAxis);
 </script>

<script type="text/template" id="skill-template">
<div class="each_skill">
  <span class="experience">Experience: {{- skill.exp }}</span>
  <span class="date">Added: {{- skill.added_at }}</span>
  <span class="language" style="background: {{- skill.language.color }}"> {{- skill.language.name }} </span>
</div>
</script>

<script type="text/template" id="experience-template">
<div class="each_experience">
  <span class="experience">Experience: {{- event.exp }}</span>
  <span class="date"> Added: {{- event.added_at }}</span>
  <span class="language" style="background: {{- skill.language.color }}"> {{- skill.language.name }} </span>
</div>
</script>
<%= debug(params) if Rails.env.development? %>